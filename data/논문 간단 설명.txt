
논문 간단 설명

1. 유전 알고리즘 기반 타순 최적화 (Sen Han, 2012)
출처: Batting order optimization by genetic algorithm

핵심 기여:

야구 경기를 이벤트 집합으로 모델링하여 시뮬레이션 기반 적합도 평가 시스템 구현

120경기 시뮬레이션을 통해 타순의 평균 득점 계산 (코드의 num_simulations=200으로 확장 적용)

토너먼트 선택(크기 10)과 세대 교체 전략 제안

코드 반영 사항:

python
def tournament_selection(population, fitness_scores, k=5):
    selected = random.sample(list(zip(population, fitness_scores)), k)
    return max(selected, key=lambda x: x[1])[0]
토너먼트 크기 조정(5→10)을 통해 탐색 다양성 향상 

2. 마르코프 체인 모델 (Bukiet et al., 1997)
출처: Improved optimal batting-order with several effects for baseball

핵심 기여:

베이스 주자 상태를 마르코프 체인으로 모델링

각 타석 결과에 따른 베이스 전이 확률 계산

코드 반영 사항:

python
def advance_runners(bases, hit_type):
    # 베이스 상태 업데이트 로직
    return bases, runs
홈런(4루타) 처리 시 모든 주자 득점 계산 방식 구현 

3. 강건성 최적화 휴리스틱 (Joel Sokol, 2003)
출처: A Robust Heuristic for Batting Order Optimization Under Uncertainty

핵심 기여:

실현 가치(Realization Value) 개념 도입

불확실성 하에서도 강건한 타순 생성 알고리즘

코드 반영 사항:

python
hit_type = random.choices([1,2,3,4], weights=[slg*0.6, slg*0.25, slg*0.1, slg*0.05])
가중치 시스템을 통해 타자의 OBP/SLG 통계 반영 

4. 병렬 처리 기법 (Sen Han, 2012 확장)
출처: GECCO 2012 Proceedings

핵심 기여:

멀티코어 CPU 활용을 통한 시뮬레이션 속도 개선

세대별 개체 평가 분산 처리

코드 반영 사항:

python
from multiprocessing import Pool, cpu_count
Pool(cpu_count()).map(...)
병렬 처리로 적합도 계산 시간 단축 

5. 동적 프로그래밍 대조 연구 (Takahiro Takei, 2001)
출처: Improved OBO Model

차별점:

동적 프로그래밍 기반 OBO(Optimal Batting Order) 모델과 비교

몬테카를로 시뮬레이션 선택으로 지역 최적화 문제 회피

종합 분석
이 코드는 ▲Sen Han의 GA-시뮬레이션 통합 모델을 기본 골격으로, ▲Bukiet의 마르코프 체인 베이스 관리 시스템, ▲Sokol의 확률 가중치 기법을 결합한 하이브리드 접근법입니다. 특히 기존 연구들이 정적 데이터에 의존한 것과 달리, OBP/SLG 같은 현대 세이버메트릭스 지표를 활용한 점이 혁신적입니다.

